USE ryu_technology; -- Seleccionamos el esquema del proyecto Ryu_Technology

-- Triggers para la tabla PRODUCTO

/* El TRIGGER TRG_LOG_PRODUCTO controlará cada vez que se realice una operación de INSERT en la Tabla PRODUCTO, agregando un nuevo valor a los campos de la tabla, 
tomando solo valores del usuario y la fecha y hora de cuándo se realizó. Se guarda en la tabla LOG_AUDITORIA*/

DROP TRIGGER IF EXISTS TRG_LOG_PRODUCTO;
DELIMITER //
CREATE TRIGGER TRG_LOG_PRODUCTO AFTER INSERT ON RYU_TECHNOLOGY.PRODUCTO
FOR EACH ROW 
BEGIN
INSERT INTO LOG_AUDITORIA (NOMBRE_ACCION , NOMBRE_TABLA , USUARIO,FECHA_EVENTO, HORA_EVENTO)
VALUES ( 'INSERT' , 'PRODUCTO' , CURRENT_USER() , NOW(), CURRENT_TIME());

END//
DELIMITER ;

/* El Trigger TRG_LOG_PRODUCTO_UPDATE monitorea cada vez que se modifique con UPDATE la tabla PRODUCTO. Estara auditando los valores de NOMBRE_PRODUCTO y PRECIO_PRODUCTO
almacenando los valores anteriores y los nuevos valores si es que se produce cambio, asi como el usuario, la fecha y la hora del evento. Se almacena en la tabla 
LOG_AUDITORIA_PRODUCTO */

DROP TRIGGER IF EXISTS TRG_LOG_PRODUCTO_UPDATE ;
DELIMITER //
CREATE TRIGGER TRG_LOG_PRODUCTO_UPDATE BEFORE UPDATE ON RYU_TECHNOLOGY.PRODUCTO
FOR EACH ROW 
BEGIN
INSERT INTO LOG_AUDITORIA_PRODUCTO (ID_PRODUCTO, NOMBRE_PRODUCTO_OLD_NEW, PRECIO_PRODUCTO_OLD_NEW, NOMBRE_ACCION , NOMBRE_TABLA , USUARIO, FECHA_EVENTO, HORA_EVENTO)
VALUES(OLD.id_producto ,CONCAT('ANTERIOR: ', OLD.NOMBRE, ' - ', 'NUEVO: ' , NEW.NOMBRE ), CONCAT('ANTERIOR: ', OLD.PRECIO, ' - ', 'NUEVO: ' , NEW.PRECIO ), 'UPDATE' , 'PRODUCTO' , CURRENT_USER(), NOW(), CURRENT_TIME());

END//
DELIMITER ;

/* El Trigger TRG_LOG_PRODUCTO_DELETE registra cada vez que se borre un registro en la tabla PRODUCTO, por lo que usa la instruccion BEFORE. Almacena los datos de los productos
borrados con el usuario que lo ejecutó, la fecha y la hora. Se almacena tambien en la tabla LOG_AUDITORIA_PRODUCTO */

DROP TRIGGER IF EXISTS TRG_LOG_PRODUCTO_DELETE ;
DELIMITER //
CREATE TRIGGER TRG_LOG_PRODUCTO_DELETE BEFORE DELETE ON RYU_TECHNOLOGY.PRODUCTO
FOR EACH ROW 
BEGIN
INSERT INTO LOG_AUDITORIA_PRODUCTO (ID_PRODUCTO, NOMBRE_PRODUCTO_OLD_NEW, PRECIO_PRODUCTO_OLD_NEW, NOMBRE_ACCION , NOMBRE_TABLA , USUARIO, FECHA_EVENTO, HORA_EVENTO)
VALUES(OLD.id_producto , OLD.NOMBRE, OLD.PRECIO, 'DELETE' , 'PRODUCTO' , CURRENT_USER(), NOW(), CURRENT_TIME());

END//
DELIMITER ;

-- Triggers para la tabla CARRITO

/* EL Trigger TRG_LOG_CARRITO registra los cambios que ocurren cuando se borrar un registro de la tabla CARRITO, almacena los datos el LOG_AUDITORIA */

DROP TRIGGER IF EXISTS TRG_LOG_CARRITO;
DELIMITER //
CREATE TRIGGER TRG_LOG_CARRITO AFTER INSERT ON RYU_TECHNOLOGY.CARRITO
FOR EACH ROW 
BEGIN
INSERT INTO LOG_AUDITORIA (NOMBRE_ACCION , NOMBRE_TABLA , USUARIO,FECHA_EVENTO, HORA_EVENTO)
VALUES ( 'INSERT' , 'CARRITO' , CURRENT_USER() , NOW(), CURRENT_TIME());

END//
DELIMITER ;

/*EL TRIGGER  TRG_LOG_CARRITO_UPDATE se dispara cuando ocurren actualizaciones del campo CANTIDAD_AGREGADA en la tabla CARRITO, que es único campo que deberia varía en esta tabla,
que se refiere a la cantidad de un producto a comprar. Se almacena en LOG_AUDITORIA_CARRITO usando BEFORE para tener cuenta de los datos antes de la modificación*/

DROP TRIGGER IF EXISTS TRG_LOG_CARRITO_UPDATE ;
DELIMITER //
CREATE TRIGGER TRG_LOG_CARRITO_UPDATE BEFORE UPDATE ON RYU_TECHNOLOGY.CARRITO
FOR EACH ROW 
BEGIN
INSERT INTO LOG_AUDITORIA_CARRITO (ID_PRODUCTO, NOMBRE_PRODUCTO, CANTIDAD_PRODUCTO_OLD_NEW, NOMBRE_ACCION , NOMBRE_TABLA , USUARIO, FECHA_EVENTO, HORA_EVENTO)
VALUES(OLD.id_producto , OLD.NOMBRE , CONCAT('ANTERIOR: ', OLD.CANTIDAD_AGREGADA, ' - ', 'NUEVO: ' , NEW.CANTIDAD_AGREGADA ), 'UPDATE' , 'CARRITO' , CURRENT_USER(), NOW(), CURRENT_TIME());

END//
DELIMITER ;

/* El Trigger TRG_LOG_CARRITO_DELETE se activa al borrar un registro de la tabla CARRITO, por lo que usa el comando BEFORE para almacenar los datos a borrar. Se almacena en la tabla
LOG_AUDITORIA_CARRITO*/

DROP TRIGGER IF EXISTS TRG_LOG_CARRITO_DELETE ;
DELIMITER //
CREATE TRIGGER TRG_LOG_CARRITO_DELETE BEFORE DELETE ON RYU_TECHNOLOGY.CARRITO
FOR EACH ROW 
BEGIN
INSERT INTO LOG_AUDITORIA_CARRITO (ID_PRODUCTO, NOMBRE_PRODUCTO, CANTIDAD_PRODUCTO_OLD_NEW, NOMBRE_ACCION , NOMBRE_TABLA , USUARIO, FECHA_EVENTO, HORA_EVENTO)
VALUES(OLD.id_producto , OLD.NOMBRE, OLD.CANTIDAD_AGREGADA, 'DELETE' , 'CARRITO' , CURRENT_USER(), NOW(), CURRENT_TIME());

END//
DELIMITER ;