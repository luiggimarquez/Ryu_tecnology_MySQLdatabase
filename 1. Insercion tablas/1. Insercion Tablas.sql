CREATE SCHEMA RYU_TECHNOLOGY;
USE RYU_TECHNOLOGY;

DROP TABLE IF EXISTS RYU_TECHNOLOGY.CATEGORIA;
CREATE TABLE IF NOT EXISTS RYU_TECHNOLOGY.CATEGORIA

/* LA TABLA CATEGORÍA INSERTA DINAMICAMENTE EN EL MENU DE LA WEB LAS CATEGORÍAS EXISTENTES
Y LAS LIMITA EN LAS OPCIONES DEL PRODUCTO*/
(
ID_CATEGORIA INT AUTO_INCREMENT,
NOMBRE_CATEGORIA VARCHAR(20),
PRIMARY KEY (ID_CATEGORIA)
);

DROP TABLE IF EXISTS RYU_TECHNOLOGY.USUARIO;
CREATE TABLE IF NOT EXISTS RYU_TECHNOLOGY.USUARIO

/* LA TABLA USUARIO CONTIENE LOS DATOS DEL USUARIO PARA GENERAR LA FACTURA Y CON SU ID, CONSULTAR
A FUTURO TODAS LAS COMPRAS REALIZADAS */
(
ID_USUARIO INT NOT NULL,
NOMBRE VARCHAR(20) NOT NULL,
APELLIDO VARCHAR(20) NOT NULL,
EMAIL VARCHAR(40) NOT NULL,
DIRECCION VARCHAR(40) NOT NULL,
TELEFONO INT DEFAULT 0,
PRIMARY KEY (ID_USUARIO)
);

DROP TABLE IF EXISTS RYU_TECHNOLOGY.PRODUCTO;
CREATE TABLE IF NOT EXISTS RYU_TECHNOLOGY.PRODUCTO

/* LA TABLA PRODUCTO CONTIENE EL STOCK (INVENTARIO) DE TODOS LOS PRODUCTOS DE LA TIENDA, DE AQUI SE DESCUENTAN
LA CANTIDAD QUE HAYA SIDO COMPRADA */
(
ID_PRODUCTO INT AUTO_INCREMENT,
NOMBRE VARCHAR(20) NOT NULL,
MARCA VARCHAR(12) NOT NULL,
TIPO VARCHAR (20) NOT NULL,
CATEGORIA VARCHAR(20) NOT NULL,
PRECIO MEDIUMINT NOT NULL,
CANTIDAD SMALLINT DEFAULT 0,
IMAGEN VARCHAR(20) NOT NULL,
ID_CATEGORIA INT,
PRIMARY KEY (ID_PRODUCTO),
FOREIGN KEY (ID_CATEGORIA) REFERENCES RYU_TECHNOLOGY.CATEGORIA(ID_CATEGORIA)
);

DROP TABLE IF EXISTS RYU_TECHNOLOGY.WISHLIST;
CREATE TABLE IF NOT EXISTS RYU_TECHNOLOGY.WISHLIST

-- LA TABLA WISHLIST ALMACENA PRODUCTOS QUE PUEDEN SER AGREGADOS EN UN FUTURO AL CARRITO
(
ID_PRODUCTO_WISHLIST INT AUTO_INCREMENT,
NOMBRE VARCHAR(20) NOT NULL,
MARCA VARCHAR(12) NOT NULL,
ID_PRODUCTO INT,
PRIMARY KEY (ID_PRODUCTO_WISHLIST),
FOREIGN KEY (ID_PRODUCTO) REFERENCES RYU_TECHNOLOGY.PRODUCTO (ID_PRODUCTO)
);

DROP TABLE IF EXISTS RYU_TECHNOLOGY.CARRITO;
CREATE TABLE IF NOT EXISTS RYU_TECHNOLOGY.CARRITO

-- LA TABLA CARRITO CONTIENE LA INFORMACION DE LOS PRODUCTOS SELECCIONADOS POR EL USUARIO PARA SER COMPRADOS
(
ID_PRODUCTO_AGREGADO INT AUTO_INCREMENT,
NOMBRE VARCHAR(20) NOT NULL,
CANTIDAD_AGREGADA SMALLINT NOT NULL, -- CANTIDAD SELECCIONADA POR EL USUARIO PARA COMPRAR
CANTIDAD_STOCK SMALLINT NOT NULL, -- CANTIDAD TOTAL DE LOS PRODUCTOS EN STOCK
PRECIO MEDIUMINT NOT NULL,
MARCA VARCHAR(12),
CATEGORIA VARCHAR(20),
ID_PRODUCTO INT,
ID_PRODUCTO_WISHLIST INT,
PRIMARY KEY (ID_PRODUCTO_AGREGADO),
FOREIGN KEY (ID_PRODUCTO) REFERENCES RYU_TECHNOLOGY.PRODUCTO(ID_PRODUCTO),
FOREIGN KEY (ID_PRODUCTO_WISHLIST) REFERENCES RYU_TECHNOLOGY.WISHLIST(ID_PRODUCTO_WISHLIST)
);

DROP TABLE IF EXISTS RYU_TECHNOLOGY.COMPRA;
CREATE TABLE IF NOT EXISTS RYU_TECHNOLOGY.COMPRA

-- LA TABLA COMPRA CONTIENE EL CONTENIDO DE LA COMPRA FINAL REALIZADA POR EL USUARIO
(
ID_COMPRA INT NOT NULL,
CANTIDAD_COMPRADA SMALLINT NOT NULL,
CANTIDAD_STOCK SMALLINT NOT NULL, -- ESTE DATO MENOS LA CANTIDAD COMPRADA ACTUALIZAN EL STOCK DE PRODUCTOS
PRECIO MEDIUMINT NOT NULL,
MARCA VARCHAR(12) NOT NULL,
CATEGORIA INT NOT NULL,
ID_PRODUCTO_AGREGADO INT,
ID_PRODUCTO INT,
PRIMARY KEY (ID_COMPRA),
FOREIGN KEY (ID_PRODUCTO_AGREGADO) REFERENCES RYU_TECHNOLOGY.CARRITO(ID_PRODUCTO_AGREGADO),
FOREIGN KEY (ID_PRODUCTO) REFERENCES RYU_TECHNOLOGY.PRODUCTO(ID_PRODUCTO)
);

DROP TABLE IF EXISTS RYU_TECHNOLOGY.FACTURACION;
CREATE TABLE IF NOT EXISTS RYU_TECHNOLOGY.FACTURACION

-- LA TABLA FACTURACION POSEE TODOS LOS REGISTRO DE COMPRAS REALIZADOS POR USUARIO
(
ID_FACTURACION INT NOT NULL,
FECHA_COMPRA DATETIME NOT NULL,
ID_COMPRA INT,
CODIGO_FACTURA VARCHAR(6),
ID_USUARIO INT,
PRIMARY KEY (ID_FACTURACION),
FOREIGN KEY (ID_COMPRA) REFERENCES RYU_TECHNOLOGY.COMPRA(ID_COMPRA),
FOREIGN KEY (ID_USUARIO) REFERENCES RYU_TECHNOLOGY.USUARIO(ID_USUARIO)
);

-- TABLAS PARA ALMACENAR LOS TRIGGERS

DROP TABLE IF EXISTS LOG_AUDITORIA;
CREATE TABLE IF NOT EXISTS LOG_AUDITORIA 
(
ID_LOG INT AUTO_INCREMENT,
NOMBRE_ACCION VARCHAR(6),
NOMBRE_TABLA VARCHAR(12),
USUARIO VARCHAR(15),
FECHA_EVENTO DATE,
HORA_EVENTO TIME,
PRIMARY KEY (ID_LOG)
);

DROP TABLE IF EXISTS LOG_AUDITORIA_PRODUCTO;
CREATE TABLE IF NOT EXISTS LOG_AUDITORIA_PRODUCTO 
(
ID_LOG INT AUTO_INCREMENT ,
ID_PRODUCTO INT NOT NULL ,
NOMBRE_PRODUCTO_OLD_NEW VARCHAR(100) DEFAULT NULL,
PRECIO_PRODUCTO_OLD_NEW VARCHAR(100) DEFAULT NULL,
NOMBRE_ACCION VARCHAR(6) ,
NOMBRE_TABLA VARCHAR(12) ,
USUARIO VARCHAR(15) ,
FECHA_EVENTO DATE,
HORA_EVENTO TIME,
PRIMARY KEY (ID_LOG)
);

DROP TABLE IF EXISTS LOG_AUDITORIA_CARRITO;
CREATE TABLE IF NOT EXISTS LOG_AUDITORIA_CARRITO
(
ID_LOG INT AUTO_INCREMENT ,
ID_PRODUCTO INT NOT NULL ,
NOMBRE_PRODUCTO VARCHAR(20) DEFAULT NULL,
CANTIDAD_PRODUCTO_OLD_NEW VARCHAR(100) DEFAULT NULL,
NOMBRE_ACCION VARCHAR(6) ,
NOMBRE_TABLA VARCHAR(12) ,
USUARIO VARCHAR(15) ,
FECHA_EVENTO DATE,
HORA_EVENTO TIME,
PRIMARY KEY (ID_LOG)
);
